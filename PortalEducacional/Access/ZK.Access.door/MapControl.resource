<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pic_close.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAEjklEQVRYR+2Vf0jUdxzG41Jy191h6cnp
        tMNfKaVTSatDLRUzLWypkYajcivImdJkK7a2KPsBtcEi2MYY7K+N0X+LQRtjfzhzaFn4I5H54xJdP0Tz
        ktJZaL72fGcFMVxc3Z++4Tj93n3e7+f9PM/nuQXzNV/zNVcxPQbtzVBbCq5lsC4SznwAw4M8+cqcxZVf
        YX8JrHLAxkQ4dwx621547rmi/gJ8fhi2rIbc5WoUDUVr4fsvgMk5m3F3AOqqYYPO5EfpbAyU58PZo14C
        2JkH6+MgT42q1sPedMgIgSw9+04gHv8XBMM34OM92jxM5yJmz+1KEXsCkR3vJQCXBiUFwaZYOLQRTojS
        PWIgZYmAqOG358TE9LOmDLk1fB+sCITMUEmnBeqKYZ9LoCVfot1LAJ8egt0FkBYMOaLykP4+tg3eEYhU
        gVjrhPNfCcQUeET7JwcgQYCztPl7OXCqDCrFmks+yNYSVSVeApi4A3/ITOUa7PSHNXaoUeMTRaJ1ldhZ
        KppF78H9MtwOsaIt12lzY/hxfWdnGiy3QLzO1dVCa4N3AJ4W7U0yn7R0mKStNtyjrQ7KVO9miYVlTC/1
        g1AzbF4h2nPhfVG/PRliBDpqMRyRIcXQk3YvV1wXiNIcZuwLpaU23y1dq7VpWZLcLnkK5JcKSVOdDSV6
        5lgE0ZLpWA3cu/Vqw58WrY3wVqFoFYAUMVEQLyCiuXbDLBs7UnVrBCbWylTi63BSmTHyl2+GPy2u1fMg
        JxNPgORIlbm2yQPFCprSN6BQgJwBjJjNzBzQbRgf8u1wo+hpZXhjNrctArBe6bhVwzPk+lzdiK3yQFwQ
        gxYLDz6SMR+N+3j7gU4ma95mJFluz9DAfOluXM/08Nn/C3TVlHrjit8hl9j4Rjnx95iP9O+9iqeiiAG7
        icfpumq712iYojnGChHyRLjcnqC8KJYBy9dwf7mN/tggpk4fUWp7Xg0E7i6GdxTTFxLAw1SZrzhB2yue
        45cwYTbRbjLRoxd2OT9VEWx8LjlG46z0Rtt59FmdQLyEHEyOKjyauFWxnd4wG+PJxobS3KA6xMzYIg2O
        ctBZmMOfWS76g2w81jPiFcVFArEpjrtRNrpjQpk4eRS6WrwDMXP2FEPlm3HrPk+tNhy/UhkvvUMt3Fto
        osNiY+hDub27BS79TN+WXDr9/Zn2V1bEKgHz5YPCODzxVtwpTjz7yrwD0L4imutOK9MZcruRcul6dwRw
        R3S3BGt41U647X7WlN8v0lWQ8a8kjwxJIuUNw6SbYmRcO21hi70DcDUunMvLbIykyHRJynPra4yYFtIc
        aGOgUsNvdD7XUL9K0PATHZlpXPMzMWNSFIfLpDrfnxBGs8PqHYCx04fp3lbA5cgljIraMW3VERKI+8Be
        uNk3ZzMafqEtL5NucwATkuqG3lsSo+gpyfUOgBGj/PYj3fnZNAb4ccXmj3vXmzLT1f9tZBAxc+EHrruS
        aRKAxmALt2orxM5F7wAYxZ2bjB4/yKUYJ00rY5n48gw8vP/CRvR3MVhZTn2EQ5IoM85/7btQmq/58m0t
        WPAPBtSGR3v8jpsAAAAASUVORK5CYII=
</value>
  </data>
</root>